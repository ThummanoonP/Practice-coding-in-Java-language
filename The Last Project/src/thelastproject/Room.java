/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Room.java
 *
 * Created on 9 ต.ค. 2553, 21:47:59
 */

package thelastproject;

import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class Room extends javax.swing.JFrame {
     String ID;
     int numRoom;
     int a,time;
     private fixRoom fix;
     private Member mem;
     private Calendar upDateTime = Calendar.getInstance();
    /** Creates new form Room */
    public Room(String id, int numRoom, int a) { //override constructor ใหม่ให้รับ parameter เพื่อมารับค่าให้ไป set กับตัวแปรที่ต้องการกำหนดค่า
        this.ID=id;
        this.numRoom=numRoom;
        this.a=a;
        this.time = upDateTime.get(Calendar.HOUR);
        try {
            initComponents();
            if (a == 0) {
                coming.setVisible(false);
            } else {
                coming.setVisible(true);
            }
            fix = fixRoom.selectByRoom(numRoom); //แก้ให้มีตัวแปรมารับค่าที่ return มาจากการเรียก method
            room.setText(fix.getNoRoom() + "");
            n.setText(fix.getNum() + "");
            if (fix.geth8().equals("X")) {
                sta.setText("ห้องว่าง");
                nameLock.setText("-");
            } else {
                sta.setText("มีการจองใช้งาน");
                nameLock.setText(fix.geth8());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (Exception ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        con = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        room = new javax.swing.JLabel();
        n = new javax.swing.JLabel();
        sta = new javax.swing.JLabel();
        nameLock = new javax.swing.JLabel();
        lock = new javax.swing.JButton();
        coming = new javax.swing.JButton();
        timeRoom1 = new javax.swing.JComboBox();
        cen = new javax.swing.JButton();
        living = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        con.setFont(new java.awt.Font("Tahoma", 1, 11));
        con.setText("ยืนยันการใช้งาน");
        con.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conActionPerformed(evt);
            }
        });

        logout.setFont(new java.awt.Font("Tahoma", 1, 11));
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Tahoma", 1, 11));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("ห้อง");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("จำนวนการรองรับคน");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setText("สภานะการใช้งาน");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel5.setText("เวลาที่จะจองใช้งาน");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setText("ผู้จองใช้งาน");

        room.setBackground(new java.awt.Color(51, 255, 255));

        n.setBackground(new java.awt.Color(51, 255, 255));

        sta.setBackground(new java.awt.Color(0, 255, 0));

        nameLock.setBackground(new java.awt.Color(51, 255, 255));

        lock.setFont(new java.awt.Font("Tahoma", 1, 11));
        lock.setText("จองใช้งาน");
        lock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockActionPerformed(evt);
            }
        });

        coming.setFont(new java.awt.Font("Tahoma", 1, 11));
        coming.setText("ปิดปรับปรุงห้อง");
        coming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comingActionPerformed(evt);
            }
        });

        timeRoom1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8.00", "9.00", "10.00", "11.00", "12.00", "13.00", "14.00", "15.00", "16.00" }));

        cen.setFont(new java.awt.Font("Tahoma", 1, 11));
        cen.setText("ยกเลิกการจองหรือใช้งาน");
        cen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cenActionPerformed(evt);
            }
        });

        living.setFont(new java.awt.Font("Tahoma", 1, 11));
        living.setText("เรียกดู");
        living.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                livingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(timeRoom1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 189, Short.MAX_VALUE)
                                .addComponent(coming))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lock)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(con)
                                .addGap(32, 32, 32)
                                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                        .addComponent(living)
                        .addGap(84, 84, 84))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameLock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(room, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(n, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(sta, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                        .addContainerGap(169, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(room, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nameLock, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeRoom1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(coming))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(con)
                    .addComponent(logout)
                    .addComponent(back)
                    .addComponent(lock))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cen)
                    .addComponent(living))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainManu().setVisible(true);
}//GEN-LAST:event_logoutActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.dispose();
        try {
            new ClassRoomSection1(ID,a).setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_backActionPerformed

    private void comingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comingActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_comingActionPerformed

    private void livingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_livingActionPerformed
        // TODO add your handling code here:
        int d=timeRoom1.getSelectedIndex();
        try {
        fix = fixRoom.selectByRoom(numRoom);
        if(d==0&&fix.geth8().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth8());
        }
        else if(d==1&&fix.geth9().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth9());
        }
        else if(d==2&&fix.geth10().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth10());
        }
        else if(d==3&&fix.geth11().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth11());
        }
        else if(d==4&&fix.geth12().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth12());
        }
        else if(d==5&&fix.geth13().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth13());
        }
        else if(d==6&&fix.geth14().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth14());
        }
        else if(d==7&&fix.geth15().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth15());
        }
        else if(d==8&&fix.geth16().equals("X")==false){
            sta.setText("มีการจองใช้งาน");
            nameLock.setText(fix.geth16());
        }
        else {
            sta.setText("ห้องว่าง");
            nameLock.setText("-");
        } 
        } catch (Exception ex) {
            sta.setText("มีการจองใช้งาน");
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_livingActionPerformed

    private void lockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockActionPerformed
        // TODO add your handling code here:
        int d=timeRoom1.getSelectedIndex();
        try {
        fix = fixRoom.selectByRoom(numRoom);
        mem = Member.selectByID(ID);
        if(d==0&&fix.geth8().equals("X")&&mem.getTime()==0.0&&fix.selectBy8H(ID).geth8().equals(ID)==false){
            fix.seth8(ID);
            fix.fixTime8H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(8.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(d==1&&fix.geth9().equals("X")&&mem.getTime()==0.0&&fix.selectBy9H(ID).geth9().equals(ID)==false){
            fix.seth9(ID);
            fix.fixTime9H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(9.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(d==2&&fix.geth10().equals("X")&&mem.getTime()==0.0&&fix.selectBy10H(ID).geth10().equals(ID)==false){
            fix.seth10(ID);
            fix.fixTime10H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(10.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(d==3&&fix.geth11().equals("X")&&mem.getTime()==0.0&&fix.selectBy11H(ID).geth11().equals(ID)==false){
            fix.seth11(ID);
            fix.fixTime11H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(11.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(d==4&&fix.geth12().equals("X")&&mem.getTime()==0.0&&fix.selectBy12H(ID).geth12().equals(ID)==false){
            fix.seth12(ID);
            fix.fixTime12H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(12.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(d==5&&fix.geth13().equals("X")&&mem.getTime()==0.0&&fix.selectBy13H(ID).geth13().equals(ID)==false){
            fix.seth13(ID);
            fix.fixTime13H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(13.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(d==6&&fix.geth14().equals("X")&&mem.getTime()==0.0&&fix.selectBy14H(ID).geth14().equals(ID)==false){
            fix.seth14(ID);
            fix.fixTime14H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(14.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(d==7&&fix.geth15().equals("X")&&mem.getTime()==0.0&&fix.selectBy15H(ID).geth15().equals(ID)==false){
            fix.seth15(ID);
            fix.fixTime15H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(15.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(d==8&&fix.geth16().equals("X")&&mem.getTime()==0.0&&fix.selectBy16H(ID).geth16().equals(ID)==false){
            fix.seth16(ID);
            fix.fixTime16H();
            mem.setRoomFix(numRoom);
            mem.roomF();
            mem.setTime(16.0);
            mem.timefix();
            JOptionPane.showMessageDialog(this,"ทำการจองห้องเรียบร้อยแล้ว");
        }
        else if(mem.getTime()!=0.0)JOptionPane.showMessageDialog(this,"ไม่สามารถจองห้องได้ต้องยืนยันการใช้ห้องก่อน");
        else JOptionPane.showMessageDialog(this,"ไม่สามารถจองห้องได้เนื่องจากห้องมีการจองใช้งานอยู่ก่อนแล้วหรือคุณได้ทำการจองห้องอื่นๆในเวลาดังกล่าว");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"ไม่สามารถจองห้องได้เนื่องจากห้องมีการจองใช้งานอยู่ก่อนแล้ว");
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_lockActionPerformed

    private void conActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conActionPerformed
        // TODO add your handling code here:
        int d=timeRoom1.getSelectedIndex();
        try {
        fix = fixRoom.selectByRoom(numRoom);
        mem = Member.selectByID(ID);
        if(d==0&&fix.geth8().equals(ID)&&mem.getTimeUse()==0.0){
            mem.setTimeUse(8.0);
            mem.timeUse();
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==0&&fix.geth8().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d == 1 && fix.geth9().equals(ID) && mem.getTimeUse() == 0.0)
            {
            mem.setTimeUse(9.0);
            mem.timeUse();
            mem.setTime(0.00);
            mem.timefix();
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==1&&fix.geth9().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==2&&fix.geth10().equals(ID)&&mem.getTimeUse()==0.0){
            mem.setTimeUse(10.0);
            mem.timeUse();
            mem.setTime(0.0);
            mem.timefix();
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==2&&fix.geth10().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==3&&fix.geth11().equals(ID)&&mem.getTimeUse()==0.0){
            mem.setTimeUse(11.0);
            mem.timeUse();
            mem.setTime(0.0);
            mem.timefix();
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==3&&fix.geth11().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==4&&fix.geth12().equals(ID)&&mem.getTimeUse()==0.0){
            mem.setTimeUse(12.0);
            mem.timeUse();
            mem.setTime(0.0);
            mem.timefix();
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==4&&fix.geth12().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==5&&fix.geth13().equals(ID)&&mem.getTimeUse()==0.0){
            mem.setTimeUse(13.0);
            mem.timeUse();
            mem.setTime(0.00);
            mem.timefix();
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==5&&fix.geth13().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==6&&fix.geth14().equals(ID)&&mem.getTimeUse()==0.0){
            mem.setTimeUse(14.0);
            mem.timeUse();
            mem.setTime(0.0);
            mem.timefix();
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==6&&fix.geth14().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==7&&fix.geth15().equals(ID)&&mem.getTimeUse()==0.0){
            mem.setTimeUse(15.0);
            mem.timeUse();
            mem.setTime(0.0);
            mem.timefix();
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==7&&fix.geth15().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==8&&fix.geth16().equals(ID)&&mem.getTimeUse()==0.0){
            mem.setTimeUse(16.0);
            mem.timeUse();
            mem.setTime(0.0);
            mem.timefix();
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            mem.setRoomU(numRoom);
            mem.roomUse();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else if(d==8&&fix.geth16().equals(ID)){
            mem.setTime(0.0);
            mem.timefix();
            mem.setRoomFix(0);
            mem.roomF();
            JOptionPane.showMessageDialog(this,"ทำการยืนยันการใช้ห้องเรียบร้อยแล้ว");
        }
        else JOptionPane.showMessageDialog(this,"ไม่สามารถยืนยันการใช้งานได้เนื่องจากคุณไม่ได้จองห้องดังกล่าว"); 
        } catch (Exception ex) {
            //JOptionPane.showMessageDialog(this,"ไม่สามารถยืนยันการใช้งานได้เนื่องจากคุณไม่ได้จองห้องดังกล่าว");
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_conActionPerformed

    private void cenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cenActionPerformed
        try {
            // TODO add your handling code here:int d=timeRoom1.getSelectedIndex();
            int d = timeRoom1.getSelectedIndex();
            try {
                fix = fixRoom.selectByRoom(numRoom);
                mem = Member.selectByID(ID);
                if (d == 0 && fix.geth8().equals(ID) && mem.getTimeUse() == 8.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth8("X");
                    fix.fixTime8H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                } 
                else if (d == 0 && fix.geth8().equals(ID) && mem.getTime() == 8.0) {
                    mem.setTime(0.0);
                    mem.timefix();
                    fix.seth8("X");
                    fix.fixTime8H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 1 && fix.geth9().equals(ID) && mem.getTimeUse() == 9.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth9("X");
                    fix.fixTime9H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                } 
                else if (d == 1 && fix.geth9().equals(ID) && mem.getTime() == 9.0) {
                    mem.setTime(0.0);
                    mem.timefix();
                    fix.seth9("X");
                    fix.fixTime9H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 2 && fix.geth10().equals(ID) && mem.getTimeUse() == 10.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth10("X");
                    fix.fixTime10H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                } 
                else if (d == 2 && fix.geth10().equals(ID) && mem.getTime() == 10.0) {
                    mem.setTime(0.0);
                    mem.timefix();
                    fix.seth10("X");
                    fix.fixTime10H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 3 && fix.geth11().equals(ID) && mem.getTimeUse() == 11.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth11("X");
                    fix.fixTime11H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                } 
                else if (d == 3 && fix.geth11().equals(ID) && mem.getTime() == 11.0) {
                    mem.setTime(0.0);
                    mem.timefix();
                    fix.seth11("X");
                    fix.fixTime11H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 4 && fix.geth12().equals(ID) && mem.getTimeUse() == 12.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth12("X");
                    fix.fixTime12H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                } 
                else if (d == 4 && fix.geth12().equals(ID) && mem.getTime() == 12.0) {
                    mem.setTime(0.0);
                    mem.timefix();
                    fix.seth12("X");
                    fix.fixTime12H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 5 && fix.geth13().equals(ID) && mem.getTimeUse() == 13.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth13("X");
                    fix.fixTime13H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                } 
                else if (d == 5 && fix.geth13().equals(ID) && mem.getTime() == 13.0) {
                    mem.setTime(0.0);
                    mem.timefix();
                    fix.seth13("X");
                    fix.fixTime13H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 6 && fix.geth14().equals(ID) && mem.getTimeUse() == 14.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth14("X");
                    fix.fixTime14H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                } 
                else if (d == 6 && fix.geth14().equals(ID) && mem.getTime() == 14.0) {
                    mem.setTime(0.0);
                    mem.timefix();
                    fix.seth14("X");
                    fix.fixTime14H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 7 && fix.geth15().equals(ID) && mem.getTimeUse() == 15.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth15("X");
                    fix.fixTime15H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                } 
                else if (d == 7 && fix.geth15().equals(ID) && mem.getTime() == 15.0) {
                    mem.setTime(0.0);
                    mem.timefix();
                    fix.seth15("X");
                    fix.fixTime15H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 8 && fix.geth16().equals(ID) && mem.getTimeUse() == 16.0) {
                    mem.setTimeUse(0.0);
                    mem.timeUse();
                    fix.seth16("X");
                    fix.fixTime16H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
                else if (d == 8 && fix.geth16().equals(ID) && mem.getTime() == 16.0) {
                    mem.setTime(0.0);
                    mem.timefix();;
                    fix.seth16("X");
                    fix.fixTime16H();
                    JOptionPane.showMessageDialog(this,"ทำการยกเลิกการจองใช้งานห้องเรียบร้อยแล้ว");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "ไม่สามารถยกเลิกการใช้งานได้เนื่องจากคุณไม่ได้จองใช้งานห้องดังกล่าว");
                Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
            }
            mem = Member.selectByID(ID);
            if (fixRoom.selectBy8H(ID).geth8().equals(ID)&&time == 8 && mem.getTime() != 8.0) {
                mem.setTimeUse(8.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
            else if(fixRoom.selectBy9H(ID).geth9().equals(ID) && time == 9 && mem.getTime() != 9.0) {
                mem.setTimeUse(9.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
            else if(fixRoom.selectBy10H(ID).geth10().equals(ID) && time == 10 && mem.getTime() != 10.0) {
                mem.setTimeUse(10.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
            else if(fixRoom.selectBy11H(ID).geth11().equals(ID) && time == 11 && mem.getTime() != 11.0) {
                mem.setTimeUse(11.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
            else if(fixRoom.selectBy12H(ID).geth12().equals(ID) && time == 12 && mem.getTime() != 12.0) {
                mem.setTimeUse(12.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
            else if(fixRoom.selectBy13H(ID).geth13().equals(ID) && time == 13 && mem.getTime() != 13.0) {
                mem.setTimeUse(13.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
            else if(fixRoom.selectBy14H(ID).geth14().equals(ID) && time == 14 && mem.getTime() != 14.0) {
                mem.setTimeUse(14.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
            else if(fixRoom.selectBy15H(ID).geth15().equals(ID) && time == 15 && mem.getTime() != 15.0) {
                mem.setTimeUse(15.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
            else if(fixRoom.selectBy16H(ID).geth16().equals(ID) && time == 16 && mem.getTime() != 16.0) {
                mem.setTimeUse(16.0);
                mem.timeUse();
                mem.setRoomU(numRoom);
                mem.roomUse();
            }
        } catch (Exception ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cenActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Room().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton cen;
    private javax.swing.JButton coming;
    private javax.swing.JButton con;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton living;
    private javax.swing.JButton lock;
    private javax.swing.JButton logout;
    private javax.swing.JLabel n;
    private javax.swing.JLabel nameLock;
    private javax.swing.JLabel room;
    private javax.swing.JLabel sta;
    private javax.swing.JComboBox timeRoom1;
    // End of variables declaration//GEN-END:variables

}
